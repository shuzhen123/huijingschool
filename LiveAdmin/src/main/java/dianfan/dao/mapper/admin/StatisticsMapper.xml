<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dianfan.dao.mapper.admin.StatisticsMapper">
	<sql id="condition_param">
		<where>
			<if test="telno != null and telno != ''">
				<!-- 用户账号 -->
				<bind name="telno_" value="telno + '%'" />
				and user.telno like #{telno_}
			</if>
			<if test="nickname != null and nickname != ''">
				<!-- 用户昵称 -->
				<bind name="nickname_" value="nickname + '%'" />
				and user.nickname like #{nickname_}
			</if>
			<if test="orderno != null and orderno != ''">
				<!-- 订单号-->
				<bind name="orderno_" value="orderno + '%'" />
				and orders.orderno like #{orderno_}
			</if>
			<if test="paystatus != null and paystatus != ''">
				<!-- 支付状态 -->
				and orders.paystatus=#{paystatus}
			</if>
			<if test="entkbn != null and entkbn != ''">
				<!-- 订单状态-->
				and orders.entkbn=#{entkbn}
			</if>
			<if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
				<!-- 使用时间搜索 -->
				<bind name="_starttime" value="starttime + ' 00:00:00'" />
				<bind name="endtime_" value="endtime + ' 23:59:59'" />
				and orders.createtime between #{_starttime} and #{endtime_}
			</if>
			and orders.userid=user.userid and ((orders.paystatus=0 and orders.endpaytime > now()) or orders.paystatus=1)
		</where>
	</sql>
	<!-- 获取课程订单总数 -->
	<select id="findCourseOrderCount" parameterType="map" resultType="int">
		select count(*)
		from 
			t_courseorders orders, t_userinfo user
			<include refid="condition_param" />
	</select>
	
	<!-- 获取课程订单数据 -->
	<select id="findCourseOrders" parameterType="map" resultType="courseOrderCollect">
		select
			data.*, rel.coursename, agent.realname
		from
			(select orders.*, cash.cpname, cash.price from
				(select 
					orders.orderno, orders.userid, orders.cashcouponid, orders.money, orders.paystatus, 
					orders.paytype, orders.paytime, orders.validitytime, orders.endpaytime, orders.createtime, orders.entkbn,
					user.telno, user.nickname
				from 
					t_courseorders orders, t_userinfo user
					<include refid="condition_param" />
					order by orders.createtime desc limit #{start}, #{length}
				)orders
				left join
				(
					select cc.id, ca.cpname, ca.price from t_ccrelation cc , t_cashcoupon ca where cc.cashid=ca.id
				) cash
				on orders.cashcouponid=cash.id
			)data 
			left join (
				select cus.userid, agent.realname from t_customer cus, t_userinfo agent where cus.dtagentuserid=agent.userid
			) agent on data.userid=agent.userid
			left join (
				select 
					rel.orderid, group_concat(cour.coursename) coursename
				from 
					t_course_orders_relation rel, t_course cour
				where 
					rel.courseid=cour.courseid group by rel.orderid
			)rel on data.orderno=rel.orderid 
			order by data.createtime desc
	</select>
	
	<!-- 根据条件获取礼物订单数量 -->
	<sql id="goods_condition_param">
		<if test="telno != null and telno != ''">
			<bind name="telno_" value="telno + '%'"/>
			and user.telno like #{telno_}
		</if>
		<if test="nickname != null and nickname != ''">
			<bind name="nickname_" value="nickname + '%'"/>
			and user.nickname like #{nickname_}
		</if>
		<if test="orderno != null and orderno != ''">
			<bind name="orderno_" value="orderno + '%'"/>
			and orders.orderno like #{orderno_}
		</if>
		<if test="starttime != null and starttime != '' and endtime != null and endtime != ''">
			<!-- 使用时间搜索 -->
			<bind name="_starttime" value="starttime + ' 00:00:00'" />
			<bind name="endtime_" value="endtime + ' 23:59:59'" />
			and orders.paytime between #{_starttime} and #{endtime_}
		</if>
	</sql>
	<select id="findGoodsOrderCount" parameterType="map" resultType="int">
		select count(*)
		from 
			t_giftorders orders, t_userinfo user
		where
			orders.userid=user.userid and orders.paystatus=1
			<include refid="goods_condition_param" />
	</select>
	
	<!-- 根据条件获取礼物订单数据 -->
	<select id="findGoodsOrders" parameterType="map" resultType="goodsOrderCollect">
		select 
			orders.orderno, orders.goodsid, orders.userid, orders.money, orders.counts, 
			orders.remark, orders.paystatus, orders.paytype, orders.paytime,
			goods.goodsname,
			user.telno, user.nickname,
			agent.realname
		from 
			t_giftorders orders, t_userinfo user, t_goods goods,
			(
				select cus.userid, agent.realname from t_customer cus, t_userinfo agent where cus.dtagentuserid=agent.userid
			) agent
		where
			orders.userid=user.userid and orders.goodsid=goods.goodsid and orders.userid=agent.userid and orders.paystatus=1 
			<include refid="goods_condition_param" />
			order by orders.paytime desc
			limit #{start}, #{length}
	</select>
	
	
</mapper>















